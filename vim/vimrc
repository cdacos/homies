" To reload when open :so %
set nocompatible " Use Vim defaults (much better!)

" Re-indent current file... 2003-11-05
map <M-i> :%s/\s\{2,}/ /ge<CR>:%s/>\s*</>\r</ge<CR>:0<CR>=:$<CR>
imap <M-i> <Esc>:%s/\s\{2,}/ /ge<CR>:%s/>\s*</>\r</ge<CR>:0<CR>=:$<CR>a

set magic
set backup
set backupdir=~/.temp " Backup file directory
set dir=~/.temp " Swap file directory
" set runtimepath+=~/.vim
set viminfo='1000,<500,n~/.temp/viminfo
set visualbell " Don't beep out loud
set viewoptions+=unix,slash
set history=500 " keep 50 lines of command line history
set ruler " show the cursor position all the time
set autoindent
set expandtab " use spaces in place of tabs.
set tabstop=2 " how many columns a tab counts for.
set softtabstop=2 " number of spaces for a tab in editing operations.
set shiftwidth=2 " number of spaces for indent (>>, <<, ...)
set smarttab " when a new line is tabbed, auto inset correct number to match context
set sm " show matching bracket
set mps+=<:> " matching symbols
set number
set clipboard=unnamed
set encoding=utf-8
set nocursorline
set nocursorcolumn
set backupcopy=yes
set hlsearch
set mousehide " Hide the mouse pointer while typing
set showtabline=1
set guioptions-=T "get rid of toolbar
set guioptions-=m "get rid of menu
set sidescroll=1
set laststatus=2
set list
set listchars=tab:>-,trail:.,extends:#,nbsp:. " Highlight problematic whitespace
set backspace=indent,eol,start

" Paste
nmap <C-S-v> :setlocal paste! paste?<cr> " Paste without reindenting

" Save
map <C-s> :w!<CR>
imap <C-s> <Esc>:w!<CR>i

vmap <C-U> gU " U in Visual mode Upper-Case
vmap <C-L> gu " L in Visual mode Lower-Case

" In visual mode copy selected
vmap <C-c> y
imap <C-v> <C-R>*

" Indentation
vmap <Tab> >gv
vmap <S-Tab> <gv

"load ftplugins and indent files
filetype plugin on
filetype indent on

" The Silver Searcher
if executable('rg')
  " Use rg over ag over grep
  set grepprg=rg\ --no-heading\ --color\ never

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command='rg %s -l --color never'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching=0
endif

" https://robots.thoughtbot.com/faster-grepping-in-vim
" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Rg silent! grep! <args>|cwindow|redraw!
nnoremap \ :Rg<SPACE>

function! FzyCommand(choice_command, vim_command)
  try
    let output = system(a:choice_command . " | fzy ")
  catch /Vim:Interrupt/
    " Swallow errors from ^C, allow redraw! below
  endtry
  redraw!
  if v:shell_error == 0 && !empty(output)
    exec a:vim_command . ' ' . output
  endif
endfunction

nnoremap <leader>e :call FzyCommand("fd -t f", ":e")<cr>
nnoremap <leader>v :call FzyCommand("fd -t f", ":vs")<cr>
nnoremap <leader>s :call FzyCommand("fd -t f", ":sp")<cr>

" Theming
set term=xterm-256color
" color monokai-phoenix
